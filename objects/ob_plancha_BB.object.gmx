<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_rojo_BB</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dibujar=0

interfaz=0

pos=1

for (var pene=0; pene&lt;12; pene++)
{
    inventario[pene]=0
}
empaque[0]=0
empaque[1]=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dibujar=0


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_colision_jugador_BB">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.pos==3 &amp;&amp; x-other.x&gt;-70 &amp;&amp; x-other.x&lt;70
{
    dibujar=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dibujar==1 &amp;&amp; interfaz==0 
{
    draw_set_colour(c_white)
    draw_set_valign(fa_middle)
    draw_set_halign(fa_center)
    draw_set_font(fuente_BB)
    
    var texto=""
    switch global.idioma
    {
        case 0:
            texto="Presiona -Espacio- para ir a la plancha."
        break
    }
    
    draw_text_ext(view_xview[0]+1280/2, 0, "###"+texto, 10, 600)
    
    if keyboard_check_pressed(vk_space)
    {
        interfaz=1
        dibujar=0
        ob_colision_jugador_BB.bloquear=1
        ob_jugador_BB.image_index=0
        ob_jugador_BB.image_speed=0
        audio_play_sound(s_plancha_BB, 0, 1)
        exit
    }
}

if interfaz==1 &amp;&amp; keyboard_check_pressed(vk_space)
{
        interfaz=0
        dibujar=1
        ob_colision_jugador_BB.bloquear=0
        audio_stop_sound(s_plancha_BB)
        exit    
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if interfaz==1
{
    draw_sprite(sp_interfaz_BB, 0, view_xview[0]+1280/2-550/2, 576/2-120)
    draw_sprite(sp_interfaz_BB, 0, view_xview[0]+1280/2-550/2, 576/2)
    
    var aux=view_xview[0]+1280/2-275+5
    //y=576/2-60+10
    
    for (var pene=0; pene&lt;array_length_1d(ob_colision_jugador_BB.inventario); pene++)
    {
        if ob_colision_jugador_BB.inventario[pene]!=0
        {
            draw_sprite(sp_ingredientes_BB, ob_colision_jugador_BB.inventario[pene], aux, 576/2-120+10)
            aux+=110
        }
        else
            pene=array_length_1d(ob_colision_jugador_BB.inventario)
    }
    //orden
    var aux=view_xview[0]+1280/2-57
    var auy=576/2+10
    var cuenta=0
    
    for (var pene=11; pene&gt;=0; pene--)
    {
        if inventario[pene]!=0
        {
            draw_sprite_ext(sp_ingredientes_BB, inventario[pene], aux, auy, .45, .45, 0, c_white, 1)
            aux+=55
            cuenta++
            if cuenta&gt;=6
                {
                    var aux=view_xview[0]+1280/2-57
                    var auy=576/2+10+60
                    var cuenta=0
                }
        }   
    }    
    //empaque
    if empaque[0]!=0
    {
        if empaque[1]==1
            draw_sprite(sp_ingredientes_BB, empaque[0], view_xview[0]+1280/2-275+5, 576/2+10)
        else
            draw_sprite_ext(sp_ingredientes_BB, empaque[0], view_xview[0]+1280/2-275+5, 576/2+10, 1, 1, 0, c_white, .5)
            
    }
    //basura
    if inventario[0]!=0
    {    
        draw_sprite(sp_basura1_BB, 0, view_xview[0]+1280/2-275+5+110, 576/2+10)
    }
    else
        draw_sprite_ext(sp_basura1_BB, 0, view_xview[0]+1280/2-275+5+110, 576/2+10, 1, 1, 0, c_white, .5)
    //puntero
    if pos&lt;6
        draw_sprite_ext(sp_morado_BB, 0, view_xview[0]+1280/2-550/2+5+(pos-1)*110, 576/2-120+10, 1, 1, 0, 0, .5)
    else
        if pos==6
               draw_sprite_ext(sp_morado_BB, 0, view_xview[0]+1280/2-550/2+5, 576/2-120+10+120, 1, 1, 0, 0, .5)
        else
            if pos==7
                draw_sprite_ext(sp_morado_BB, 0, view_xview[0]+1280/2-550/2+5+110, 576/2-120+10+120, 1, 1, 0, 0, .5)
            else
            {
                switch global.idioma
                {
                    case 0:
                        var texto="Abrir orden"
                    break
                }
                draw_text_ext(view_xview[0]+1280/2+550/4, 576/2+60, texto, 30, 300)
            }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if interfaz==2
{
    if keyboard_check_pressed(vk_space)
    {
        interfaz=1
        pos=8
    }
    
    switch global.idioma
    {
        case 0:
        var aux="Pulsa -Espacio- para salir"
        break
    }
    
    draw_text(view_xview[0]+1280/2, 576/2-190, aux)
    draw_sprite(sp_interfaz_4_BB, 0, view_xview[0]+1280/2, 576/2-120)
    draw_sprite(sp_interfaz_4_BB, 0, view_xview[0]+1280/2, 576/2)
    draw_sprite(sp_interfaz_4_BB, 0, view_xview[0]+1280/2, 576/2+120)
    
    for (var pene=0; pene&lt;12; pene++)
    {
        draw_sprite(sp_ingredientes_BB, inventario[pene], view_xview[0]+1280/2-220+5+110*(pene%4),
        576/2-180+10+floor(pene/4)*120)
    }
    draw_sprite_ext(sp_morado_BB, 0, view_xview[0]+1280/2-220+5+110*((pos-1)%4), 576/2-180+10+floor((pos-1)/4)*120,
    1, 1, 0, 0, .5)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if interfaz==1
{
    empaque[0]=0
    empaque[1]=0
    if inventario[0]==22
        empaque[0]=25
    else
        if inventario[0]==23
            empaque[0]=24
    
    if empaque[0]!=0
        for (var pene=0; pene&lt;5; pene++)
            if ob_colision_jugador_BB.inventario[pene]==empaque[0] &amp;&amp; 
            ob_colision_jugador_BB.caracteristicas[pene]==0
            {
                empaque[1]=1
                pene=5
            }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if interfaz==1
{
    if pos&lt;3
    {
        pos+=5
        exit
    }
    
    if pos&gt;5
    {
        pos-=5
        exit
    }
    
    pos=8
}
if interfaz==2
{
    if pos&lt;9
        pos+=4
    else
        pos-=8
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if interfaz==1
{
    pos++
    if pos&gt;8
    pos=1
}
if interfaz==2
{
    pos++
    if pos&gt;12
        pos=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if interfaz==1
{
    if pos&lt;3
    {
        pos+=5
        exit
    }
    
    if pos&gt;5
    {
        pos-=5
        exit
    }
    
    pos=8
}
if interfaz=2
{
    if pos&gt;4
        pos-=4
    else
        pos+=8
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if interfaz==1
{
    pos--
    if pos==0
    pos=8
}
if interfaz==2
{
    pos--
    if pos&lt;1
        pos=12
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if interfaz==1
{
    if pos&lt;6 &amp;&amp; //condiciones para ingresar ingredientes
    ob_colision_jugador_BB.inventario[pos-1]&gt;=9 &amp;&amp; //meter ingrediente en general
    ob_colision_jugador_BB.inventario[pos-1]&lt;=31 &amp;&amp; 
    ob_colision_jugador_BB.inventario[pos-1]!=24 &amp;&amp;
    ob_colision_jugador_BB.inventario[pos-1]!=25 &amp;&amp;
    ((inventario[0]==23 &amp;&amp; ob_colision_jugador_BB.inventario[pos-1]&gt;=15 &amp;&amp;//hotdog
    ob_colision_jugador_BB.inventario[pos-1]!=21 &amp;&amp;
    ob_colision_jugador_BB.inventario[pos-1]!=22 &amp;&amp;
    ob_colision_jugador_BB.inventario[pos-1]!=23) ||
    (inventario[0]=22 &amp;&amp;//hamburguesa
    ob_colision_jugador_BB.inventario[pos-1]!=22 &amp;&amp;
    ob_colision_jugador_BB.inventario[pos-1]!=23
    ) || inventario[0]==0 &amp;&amp; (ob_colision_jugador_BB.inventario[pos-1]==22 || 
    ob_colision_jugador_BB.inventario[pos-1]==23))
    {
        acomodo_BB(0)
        exit
    }
    
    //tirar a la basura
    if pos==7
    {
        ob_jugador_BB.alarm[9]=2
        for (var pene=0; pene&lt;12; pene++)
        {
            inventario[pene]=0
        }
        exit
    }
    
    //sacar orden
    
    if pos==6  &amp;&amp; inventario[0]!=0 &amp;&amp; empaque[1]==1 //&amp;&amp; ob_colision_jugador_BB.inventario[4]!=0
    {
        ob_jugador_BB.alarm[9]=2
        if inventario[0]==23//hotdog
            var aux=24
        else//hamburguesa
            var aux=25
        for (var pene=0; pene&lt;5; pene++)
        {
            if ob_colision_jugador_BB.inventario[pene]==aux &amp;&amp; 
            ob_colision_jugador_BB.caracteristicas[pene]==0
            {
                var meter_en=pene
                 ob_colision_jugador_BB.inventario[pene]=0
                 pene=5
                 /*for (;pene&lt;4;pene++)
                 {
                    ob_colision_jugador_BB.inventario[pene]=ob_colision_jugador_BB.inventario[pene+1]
                 }*/
            }
        }
        ob_colision_jugador_BB.inventario[meter_en]=aux
        //ob_colision_jugador_BB.caracteristicas[4]=inventario
        var inventario_temporal
        for (var pene=0; pene&lt;12; pene++)
        {
            inventario_temporal[pene]=inventario[pene]
        }
        ob_colision_jugador_BB.caracteristicas[meter_en]=inventario_temporal
        
        for (var pene=0; pene&lt;12; pene++)
        {
            inventario[pene]=0
        }
        exit
    }
    
    //meter orden ya hecha
    
    if pos&lt;6 &amp;&amp; (ob_colision_jugador_BB.inventario[pos-1]==24 || 
    ob_colision_jugador_BB.inventario[pos-1]==25) &amp;&amp; 
    inventario[0]==0 &amp;&amp; ob_colision_jugador_BB.caracteristicas[pos-1]!=0
    {
        ob_jugador_BB.alarm[9]=2
        inventario=ob_colision_jugador_BB.caracteristicas[pos-1]
        ob_colision_jugador_BB.caracteristicas[pos-1]=0
        exit
    }
    
    if pos==8
    {
        interfaz=2
        pos=1
    }
    exit
}
else
    if interfaz==2 &amp;&amp; ob_colision_jugador_BB.inventario[4]==0 &amp;&amp; pos!=1 &amp;&amp;
    inventario[pos-1]!=0
    {
        ob_jugador_BB.alarm[9]=3
        ob_colision_jugador_BB.inventario[4]=inventario[pos-1]
        for (var pene=pos-1; pene&lt;11; pene++)
        {
            inventario[pene]=inventario[pene+1]
        }
        inventario[11]=0
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
